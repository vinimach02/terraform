pipeline {
    agent any
    options {disableConcurrentBuilds()}
    environment {
        GOOGLE_APPLICATION_CREDENTIALS = credentials('terraform-with-gcp')
    }
    parameters { 
      choice(name: 'ACTION', choices: ['', 'plan-apply', 'destroy'], description: 'Select the Action {plan-apply|destroy}')
    }

    stages {

        stage('clean workspaces -----------') { 
            steps {
              cleanWs()
              sh 'env'
            } //steps
        }  //stage
        
        stage("git clone code terraform"){
            steps {
                cleanWs()
                    checkout([$class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [[$class: 'CleanCheckout']], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [
                        [url: 'https://github.com/vinimach02/terraform.git', credentialsId: '']
                        ]])
                sh 'pwd' 
                sh 'ls -l'
            } //steps
        }  //stage
        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Plan') {
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Confirm the Action') {
            steps {
                script {
                    def userInput = input(id: 'confirm', message: params.ACTION + '?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
                }
            }
        }
        
        stage('Terraform apply or destroy') {
            steps {
               sh 'echo params.ACTION'
            script{  
                if (params.ACTION == "destroy"){
                         sh ' echo "Action" + params.ACTION'   
                         sh 'terraform destroy -auto-approve'
                } else {
                         sh ' echo  "Action" + params.ACTION'                 
                         sh 'terraform apply -auto-approve'  
                }  // if

            }
            } //steps
        }
        

    }
}
